<Activity mc:Ignorable="sap sap2010" x:Class="AddToQueue" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:rpu="clr-namespace:RpaWork.Paw.UiPath;assembly=rpawork.robot.helper.uipath" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_tmStartTime" Type="InArgument(s:DateTime)" />
  </x:Members>
  <this:AddToQueue.in_Config>
    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" />
  </this:AddToQueue.in_Config>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1886,3226</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>AddToQueue_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="29">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>RpaWork.Paw.UiPath</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="28">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>rpawork.robot.helper.uipath</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="AddToQueue" sap:VirtualizedContainerService.HintSize="1326,3323" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strStartWorkMessage" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtInput" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtInputAttachments" />
      <Variable x:TypeArguments="x:Boolean" Name="isStartWorkSuccessful" />
      <Variable x:TypeArguments="s:Nullable(s:Guid)" Name="guidId" />
      <Variable x:TypeArguments="x:String" Default="[in_Config(&quot;AddQueueName&quot;).ToString().Trim()]" Name="strAddQueueName" />
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="isSuccess" />
      <Variable x:TypeArguments="x:String" Default="[in_Config(&quot;AutomateQueueName&quot;).ToString().Trim()]" Name="strAutomateQueueName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <rpu:LogMessage Id="{x:Null}" DisplayName="Log AddToQueue Started" sap:VirtualizedContainerService.HintSize="1284,80" sap2010:WorkflowViewState.IdRef="LogMessage_5" LogLevel="Info" Message="AddToQueue Started" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Reset" sap:VirtualizedContainerService.HintSize="1284,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Developer\Reset.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <rpu:StartWork DescriptionFilter="{x:Null}" Note="{x:Null}" NoteFilter="{x:Null}" RelationWorkId="{x:Null}" RunNumber="{x:Null}" StatusNote="{x:Null}" StatusNoteFilter="{x:Null}" WorkId="{x:Null}" DisplayName="Start Work" sap:VirtualizedContainerService.HintSize="1284,134" Id="[guidId]" sap2010:WorkflowViewState.IdRef="StartWork_1" Input="[dtInput]" InputAttachments="[dtInputAttachments]" IsStartWorkSuccess="[isStartWorkSuccessful]" ProcessName="[strAddQueueName]" StartWorkMessage="[strStartWorkMessage]" />
    <If Condition="[isStartWorkSuccessful]" sap:VirtualizedContainerService.HintSize="1284,2664" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence DisplayName="True" sap:VirtualizedContainerService.HintSize="997,2504" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="strMessage" />
            <Variable x:TypeArguments="x:String" Name="strExceptionType" />
            <Variable x:TypeArguments="sd:DataTable" Name="dtAddWorkResult" />
            <Variable x:TypeArguments="x:Boolean" Name="isAddWorkSuccessful" />
            <Variable x:TypeArguments="x:String" Name="strAddWorkMessage" />
            <Variable x:TypeArguments="sd:DataTable" Name="dtAddWork" />
            <Variable x:TypeArguments="x:String" Name="strEndWorkMessage" />
            <Variable x:TypeArguments="x:Boolean" Name="isEndWorkSuccessful" />
            <Variable x:TypeArguments="x:Boolean" Name="isStopProcess" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch DisplayName="Add To Queue" sap:VirtualizedContainerService.HintSize="955,1894" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <Sequence DisplayName="Add To Queue" sap:VirtualizedContainerService.HintSize="917,1662" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Load Data" sap:VirtualizedContainerService.HintSize="875,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Developer\LoadData.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dtInput">[dtInput]</InArgument>
                    <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dtInputAttachments">[dtInputAttachments]</InArgument>
                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dtAddWork">[dtAddWork]</OutArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_in_Config">[in_Config]</InArgument>
                    <InArgument x:TypeArguments="s:Nullable(s:Guid)" x:Key="in_guidId">[guidId]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <If Condition="[Not Convert.ToBoolean(in_Config(&quot;IsManualLoadData&quot;).ToString().Trim())]" sap:VirtualizedContainerService.HintSize="875,1417" sap2010:WorkflowViewState.IdRef="If_5">
                  <If.Then>
                    <Sequence DisplayName="True" sap:VirtualizedContainerService.HintSize="526,1257" sap2010:WorkflowViewState.IdRef="Sequence_13">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[dtAddWork is Nothing OrElse Not dtAddWork.RowCount &gt; 0]" sap:VirtualizedContainerService.HintSize="484,304" sap2010:WorkflowViewState.IdRef="If_3">
                        <If.Then>
                          <Sequence DisplayName="True" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_15">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Throw Exception="[new BusinessRuleException(&quot;No Data&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_3" />
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_10">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                      <If Condition="[Convert.ToBoolean(in_Config(&quot;IsUniqueControl&quot;).ToString().Trim())]" sap:VirtualizedContainerService.HintSize="484,303" sap2010:WorkflowViewState.IdRef="If_4">
                        <If.Then>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Is Item In Queue" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Framework\IsItemInQueue.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_strQueueName">[strAutomateQueueName]</InArgument>
                              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dtAddWork">[dtAddWork]</InOutArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_strInputKey">[in_Config("InputKey").ToString().Trim()]</InArgument>
                              <InArgument x:TypeArguments="x:Int32" x:Key="in_intUniqueControlDay">[Convert.ToInt32(in_Config("UniqueControlDay").ToString().Trim()) * -1]</InArgument>
                              <InArgument x:TypeArguments="s:DateTime" x:Key="in_in_tmStartTime">[in_tmStartTime]</InArgument>
                              <InArgument x:TypeArguments="s:Nullable(x:Boolean)" x:Key="in_isUniqueIncludeCompleted">[Convert.ToBoolean(in_Config("IsUniqueIncludeCompleted").ToString().Trim())]</InArgument>
                              <InArgument x:TypeArguments="s:Nullable(x:Boolean)" x:Key="in_isUniqueIncludeFailed">[Convert.ToBoolean(in_Config("IsUniqueIncludeFailed").ToString().Trim())]</InArgument>
                              <InArgument x:TypeArguments="s:Nullable(x:Boolean)" x:Key="in_isUniqueIncludeDisabled">[Convert.ToBoolean(in_Config("IsUniqueIncludeDisabled").ToString().Trim())]</InArgument>
                              <InArgument x:TypeArguments="s:Nullable(x:Boolean)" x:Key="in_isUniqueIncludeExpired">[Convert.ToBoolean(in_Config("IsUniqueIncludeExpired").ToString().Trim())]</InArgument>
                              <InArgument x:TypeArguments="s:Nullable(x:Boolean)" x:Key="in_isUniqueIncludeIdle">[Convert.ToBoolean(in_Config("IsUniqueIncludeIdle").ToString().Trim())]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                      <rpu:AddWork InputAttachment="{x:Null}" QueueName="{x:Null}" RelatedWorkId="{x:Null}" SetNote="{x:Null}" SetStatusNote="{x:Null}" WorkDate="{x:Null}" AddWorkMessage="[strAddWorkMessage]" AddWorkResult="[dtAddWorkResult]" DisplayName="Add Work" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="AddWork_1" Input="[dtAddWork]" IsAddWorkSuccess="[isAddWorkSuccessful]" ProcessName="[strAutomateQueueName]" />
                      <If Condition="[Not isAddWorkSuccessful]" sap:VirtualizedContainerService.HintSize="484,304" sap2010:WorkflowViewState.IdRef="If_6">
                        <If.Then>
                          <Sequence DisplayName="True" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_16">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Throw Exception="[new SystemException(&quot;Add Work: &quot;+strAddWorkMessage)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_4" />
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_17">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="False" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_14">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="dtAddWorkResult = dtAddWork" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                        <Assign.To>
                          <OutArgument x:TypeArguments="sd:DataTable">[dtAddWorkResult]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="sd:DataTable">[dtAddWork]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="921,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Exception" sap:VirtualizedContainerService.HintSize="304,346" sap2010:WorkflowViewState.IdRef="Sequence_12">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="strMessage = exception.Message" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strMessage]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="strExceptionType = exception.GetType().Name" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strExceptionType]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[exception.GetType().Name]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="isSuccess = False" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[isSuccess]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
          <rpu:EndWork Defer="{x:Null}" DeferDate="{x:Null}" OutputAttachment="{x:Null}" DisplayName="End Work" EndWorkMessage="[strEndWorkMessage]" ExceptionType="[strExceptionType]" sap:VirtualizedContainerService.HintSize="955,134" Id="[guidId.Value]" sap2010:WorkflowViewState.IdRef="EndWork_1" IsEndWorkSuccess="[isEndWorkSuccessful]" IsStopProcess="[isStopProcess]" IsSuccess="[isSuccess]" Message="[strMessage]" Output="[dtAddWorkResult]" />
          <If Condition="[Not isEndWorkSuccessful]" sap:VirtualizedContainerService.HintSize="955,304" sap2010:WorkflowViewState.IdRef="If_7">
            <If.Then>
              <Sequence DisplayName="True" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_18">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Throw Exception="[new SystemException(&quot;End Work: &quot;+strEndWorkMessage)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_5" />
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_19">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="False" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Throw Exception="[new BusinessRuleException(strStartWorkMessage)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
        </Sequence>
      </If.Else>
    </If>
    <rpu:LogMessage Id="{x:Null}" DisplayName="Log AddToQueue Completed" sap:VirtualizedContainerService.HintSize="1284,80" sap2010:WorkflowViewState.IdRef="LogMessage_6" LogLevel="Info" Message="AddToQueue Completed" />
  </Sequence>
</Activity>